apply Notification "Metro_MC_Status" to Host {
	import "mail-host-notification"
	
	user_groups		= [ "SVTECH",  "MOBIFONE" ]
	interval 		= 1h
	assign where 	host.vars.device_type == "MC"
}


apply Notification "Metro_AGG_Status" to Host {
	import "mail-host-notification"
	
	user_groups		= [ "SVTECH",  "MOBIFONE" ]
	interval 		= 3h
	assign where 	host.vars.device_type == "AGG"
}


apply Notification "Metro_CSR_Status" to Host {
	import "mail-host-notification"
	
	users			= [ "sonvqSVT","hungnguyenSVT"]
	user_groups		= [  "MOBIFONE" ]
	interval 		= 0
	assign where 	host.vars.device_type == "CSR"
}






apply Notification "Core_Optic_Status" to Service {
	import "mail-service-notification"
	
	users			= [ "sonvqSVT","hungnguyenSVT"]
	user_groups		= [  "MOBIFONE" ]
	states			= [ Warning, Critical ]
	interval 		= 4h
	
	assign where service.vars.service_type == "OPTIC" && match("MX*",  host.vars.model)
}


apply Notification "Core_Interface_Status" to Service {
	import "mail-service-notification"
	
	users			= [ "sonvqSVT","hungnguyenSVT"]
	user_groups		= [  "MOBIFONE" ]
	states			= [ Warning, Critical ]
	interval 		= 4h
	assign where match("*ifCheck*", service.display_name) && match("MX*",  host.vars.model)
}

#apply Notification "Core_Optic_Status" to Service {
#	import "mail-service-notification"
#	
#	users			= [ "sonvqSVT","hungnguyenSVT"]
#	user_groups		= [  "MOBIFONE" ]
#	states			= [ Warning, Critical ]
#	interval 		= 4h
#	
#	assign where service.vars.service_type == "OPTIC" && match("ACX*",  host.vars.model)
#}
#
#
#apply Notification "Core_Interface_Status" to Service {
#	import "mail-service-notification"
#	
#	users			= [ "sonvqSVT","hungnguyenSVT"]
#	user_groups		= [  "MOBIFONE" ]
#	states			= [ Warning, Critical ]
#	interval 		= 4h
#	assign where match("*ifCheck*", service.display_name) && match("ACX*",  host.vars.model)
#}



apply Notification "Environment_status" to Service {
	import 	"mail-service-notification"
	
	users			= ["hoangB-SVT"]
	user_groups		= [  "MOBIFONE" ]
	states			= [ Warning, Critical ]
	
	interval		= 0
	assign where	service.vars.service_type == "ENVIRONMENT"
}


apply Notification "CPU_status" to Service {
	import 	"mail-service-notification"
	
	users			= [ "bachleSVT"]
	user_groups		= [  "MOBIFONE" ]
	states			= [ Warning, Critical ]
	
	interval		= 0
	assign where	service.vars.service_type == "CPU"
}


apply Notification "RAM_status" to Service {
	import 	"mail-service-notification"
	
	users			= [ "bachleSVT"]
	user_groups		= [  "MOBIFONE" ]
	states			= [ Warning, Critical ]
	
	interval		= 0
	assign where	service.vars.service_type == "MEMORY"
}


apply Notification "Temperature_status" to Service {
	import 	"mail-service-notification"
	
	users			= [ "bachleSVT"]
	states			= [ Warning, Critical ]
	
	interval		= 0
	assign where	service.vars.service_type == "TEMPERATURE"
}
